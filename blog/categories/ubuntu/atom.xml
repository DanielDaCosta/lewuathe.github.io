<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ubuntu | The first cry of Atom]]></title>
  <link href="http://lewuathe.github.io/blog/categories/ubuntu/atom.xml" rel="self"/>
  <link href="http://lewuathe.github.io/"/>
  <updated>2014-02-23T19:44:17+09:00</updated>
  <id>http://lewuathe.github.io/</id>
  <author>
    <name><![CDATA[Kai Sasaki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Developing Jenkins Plugin on Vagrant]]></title>
    <link href="http://lewuathe.github.io/blog/2013/11/16/developing-jenkins-plugin-on-vagrant/"/>
    <updated>2013-11-16T21:09:00+09:00</updated>
    <id>http://lewuathe.github.io/blog/2013/11/16/developing-jenkins-plugin-on-vagrant</id>
    <content type="html"><![CDATA[<p>Recently I investigate the scalability of Jenkins. In my idea, I want to make hot standby Jenkins server with NFS. So the plugins which enable us to do that are required. And for my study, I decided to develop on Vagrant and VirtualBox. It costs me very little because there is no need to get real server.  So in this post, I will describe how to set up your jenkins plugin environment on your vagrant Ubuntu.</p>

<h2>Start vagrant</h2>

<p>My <code>Vagrantfile</code> is below. Before this, you should download precise64 box on vagrant <a href="http://www.vagrantbox.es/">site</a></p>

<p>```</p>

<h1>&ndash;<em>&ndash; mode: ruby &ndash;</em>&ndash;</h1>

<h1>vi: set ft=ruby :</h1>

<p>Vagrant.configure(&ldquo;2&rdquo;) do |config|
  # Every Vagrant virtual environment requires a box to build off of.
  config.vm.box = &ldquo;ubuntu&rdquo;</p>

<p>  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing &ldquo;localhost:8080&rdquo; will access port 80 on the guest machine.
  config.vm.network :forwarded_port, guest: 8080, host: 8080</p>

<p> end
```
Jenkins plugin server starts on port 8080. So you need to write guest port 8080. Host port can be written any number.
And start vagrant.</p>

<p><code>
$ vagrant up
</code></p>

<h2>Set up maven3</h2>

<p>Jenkins plugins are build with Maven. In this time, Maven3 can build sample plugin easily, so I recommend that you download maven3.</p>

<p><code>
$ sudo apt-get install maven
</code></p>

<h2>Write settings.xml</h2>

<p>Write settings.xml as below.</p>

<p>```
<settings>
  <pluginGroups></p>

<pre><code>&lt;pluginGroup&gt;org.jenkins-ci.tools&lt;/pluginGroup&gt;
</code></pre>

<p>  </pluginGroups></p>

<p>  <profiles></p>

<pre><code>&lt;!-- Give access to Jenkins plugins --&gt;
&lt;profile&gt;
  &lt;id&gt;jenkins&lt;/id&gt;
  &lt;activation&gt;
    &lt;activeByDefault&gt;true&lt;/activeByDefault&gt; &lt;!-- change this to false, if you don't like to have it on per default --&gt;
  &lt;/activation&gt;
  &lt;repositories&gt;
    &lt;repository&gt;
      &lt;id&gt;repo.jenkins-ci.org&lt;/id&gt;
      &lt;url&gt;http://repo.jenkins-ci.org/public/&lt;/url&gt;
    &lt;/repository&gt;
  &lt;/repositories&gt;
  &lt;pluginRepositories&gt;
    &lt;pluginRepository&gt;
      &lt;id&gt;repo.jenkins-ci.org&lt;/id&gt;
      &lt;url&gt;http://repo.jenkins-ci.org/public/&lt;/url&gt;
    &lt;/pluginRepository&gt;
  &lt;/pluginRepositories&gt;
&lt;/profile&gt;
</code></pre>

<p>  </profiles>
  <mirrors></p>

<pre><code>&lt;mirror&gt;
  &lt;id&gt;repo.jenkins-ci.org&lt;/id&gt;
  &lt;url&gt;http://repo.jenkins-ci.org/public/&lt;/url&gt;
  &lt;mirrorOf&gt;m.g.o-public&lt;/mirrorOf&gt;
&lt;/mirror&gt;
</code></pre>

<p>  </mirrors>
</settings>
```</p>

<h2>JDK!!</h2>

<p>I failed to create my plugin in this time bacause of lack of JDK. Ubuntu 12.04 LTS doesn&rsquo;t have JDK in own image. You have to install it.</p>

<p><code>
$ sudo apt-get install default-jdk
</code></p>

<h2>Build plugin</h2>

<p>Building plugin with maven command.</p>

<p><code>
$ mvn install
</code></p>

<p>And demonstrate your plugin.</p>

<p><code>
$ mvn hpi:run
</code></p>

<p>You can see Jenkins web UI on <a href="http://localhost:8080/jenkins">http://localhost:8080/jenkins</a> unless maven command has not exit.
So now, I can get multi Jenkins server for mutual mount on NFS. My Jenkins study has been continued.</p>
]]></content>
  </entry>
  
</feed>
