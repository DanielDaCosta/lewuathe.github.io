<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: DeepLearning | The first cry of Atom]]></title>
  <link href="http://lewuathe.github.io/blog/categories/deeplearning/atom.xml" rel="self"/>
  <link href="http://lewuathe.github.io/"/>
  <updated>2014-03-11T21:22:39+09:00</updated>
  <id>http://lewuathe.github.io/</id>
  <author>
    <name><![CDATA[Kai Sasaki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Tokyo Node Gakuen 11th Period]]></title>
    <link href="http://lewuathe.github.io/blog/2014/02/27/tokyo-node-gakuen-11th-period/"/>
    <updated>2014-02-27T21:34:24+09:00</updated>
    <id>http://lewuathe.github.io/blog/2014/02/27/tokyo-node-gakuen-11th-period</id>
    <content type="html"><![CDATA[<p>Yesterday, I took part in <a href="http://connpass.com/event/5071/">Tokyo Node Gakuen 11th period</a> for the first time.
Though I want to attend this meeting to be a node hacker for a long time, I have not been able to get a chance to do so.
About two weeks ago, I semi-completed <a href="https://github.com/Lewuathe/n42">n42</a> that implements some deep learning algorithms,
stacked denoised autoencoder, deep belief network. So time has come, and I realized that I have something to tell and
where I can convey my passions through one software stack, nodejs.</p>

<!-- more -->


<h2><strong>Talk about the future of nodejs</strong></h2>

<p>Presented by <a href="https://twitter.com/yosuke_furukawa">@yosuke_furukawa</a>. He is the next representative of nodejs Japan community.
He is young and so vital, passionate that I believe that future of nodejs.jp must be bright. Please go for it!</p>

<div style="width: 65%;text-align:center;" markdown="1">
<script async class="speakerdeck-embed" data-id="a753718081010131e5751252e28d83c2" data-ratio="1.33333333333333" src="http://lewuathe.github.io//speakerdeck.com/assets/embed.js"></script>
</div>


<p>He introduced some new features of nodejs v0.12 and hot libraries supported by nodejs community such as <a href="http://koajs.com/">koa</a> (Official site is so cool!) and <a href="http://primus.io/">Primus</a>. These libraries were unfamiliar to me this time. So this introduction was good to me in order to understand the current situation of nodejs roughtly. Thank you.</p>

<h2><strong>Getting started browserify</strong></h2>

<p>Next presenter was <a href="https://twitter.com/hitsujiwool">@hitsujiwool</a>. He looks very familiar with client JavaScript technologies. Especially in this session, he talked about the overview of <a href="http://browserify.org/">browserify</a>. This tool converts the codes written in <a href="http://en.wikipedia.org/wiki/CommonJS">CommonJS</a> style into the executable code in web browser. I cannot understand easily at that time. And unfortunately, this situation does not change now.</p>

<div style="width: 65%;text-align:center;" markdown="1">
<script async class="speakerdeck-embed" data-id="d0609f0080f90131e5751252e28d83c2" data-ratio="1.29456384323641" src="http://lewuathe.github.io//speakerdeck.com/assets/embed.js"></script>
</div>


<p>However, roma was not built in a day. I understand sufficiently the necessity of study client JavaScript technology stacks and trend. So I won&rsquo;t lose this chance. Even if it takes some month, I have a desire to grasp the concept of this technology at last.</p>

<p>And below is LT session.</p>

<h2><strong>Deep learning with nodejs</strong></h2>

<p>This is my session. As I said previously, I developed deep learning module in nodejs called <a href="https://www.npmjs.org/package/n42">n42</a>. n42 was named after <a href="http://en.wikipedia.org/wiki/The_Hitchhiker's_Guide_to_the_Galaxy">The Hitchhiker&rsquo;s Guide to the Galaxy</a>. A super computer called &ldquo;deep thought&rdquo; enters in this movie. People asked one diffucult question to this computer bacause this computer is so smart that it can always answer any questions. The question was this.</p>

<blockquote><p>the Answer to the Ultimate Question of Life, the Universe, and Everything</p></blockquote>

<p>After 750million years, deep thought answered.</p>

<blockquote><p>42</p></blockquote>

<p>What? The answer of every thing is really only 42? I also doubt the validity of this answer, but I like this story very much. I want to see the day when n42 can give me the answer of everything :)</p>

<iframe src="http://www.slideshare.net/slideshow/embed_code/31651520" width="427" height="356" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px 1px 0; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe>


<p> <div style="margin-bottom:5px"> <strong> <a href="https://www.slideshare.net/lewuathe/deeplearning-with-node" title="Deeplearning with node" target="_blank">Deeplearning with node</a> </strong> from <strong><a href="http://www.slideshare.net/lewuathe" target="_blank">Kai Sasaki</a></strong> </div></p>

<h2><strong>node.js as Gips for training asynchronous programming</strong></h2>

<p>I&rsquo;m afraid to say, but I could not find the presentation slide.
The presenter was <a href="https://twitter.com/niryuu">@niryuu</a>. His presentation was exciting.
The most impressive word I can remember is</p>

<blockquote><p>Do it properly</p></blockquote>

<p>Asynchronous programming in nodejs becomes sometimes very halmful such as callback hell.
He solved this problem simple concept. Return values properly. Using Primise etc.
These motivations had stimulated me to write code properly in any situation.
I feel that I can make use of this phrase when I was discouraged. Thank you.</p>

<h2><strong>With node.js, a novice programmer can make online fighting game easily</strong></h2>

<p>This session was given by <a href="https://twitter.com/pegass85">@pegass85</a>. He was so passionate that I enjoy his presentaion profoundly. He seems that he loves games very much. So he intruduced some games that released about a decade ago. Through his talking, I can feel that he really enjoy programming and games. It reminded me of the importance of enjoying programming as a hobbiest not a worker. I am looking forward the day when his game of &ldquo;paper, stone and scissors&rdquo; running properly online.</p>

<iframe src="http://www.slideshare.net/slideshow/embed_code/31621477" width="427" height="356" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px 1px 0; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe>


<p> <div style="margin-bottom:5px"> <strong> <a href="https://www.slideshare.net/yuusuketakeuchi96/nodejs-31621477" title="Node.jsなら日曜プログラマーでも簡単に通信対戦ゲームが作れる" target="_blank">Node.jsなら日曜プログラマーでも簡単に通信対戦ゲームが作れる</a> </strong> from <strong><a href="http://www.slideshare.net/yuusuketakeuchi96" target="_blank">Yuusuke Takeuchi</a></strong> </div></p>

<h2>Last but not least</h2>

<p>Throught these sessions, I can see the potential of nodejs in a new light.
By the huge power of community, these softwares are given its futures.
I was forced to realize that fact by these passionate developers of nodejs.
The main theme of this seminor was</p>

<blockquote><p>Talk about the future of nodejs</p></blockquote>

<p>I have a desire of the bright future of nodejs when a lot of developers and users
make world better place helping each other with this software.
After meeting these passionate developers, this desire changed to confidence.</p>

<p>Thank you.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Restricted Boltzmann Machine in Node]]></title>
    <link href="http://lewuathe.github.io/blog/2014/02/05/restricted-boltzmann-machine-in-node/"/>
    <updated>2014-02-05T21:18:00+09:00</updated>
    <id>http://lewuathe.github.io/blog/2014/02/05/restricted-boltzmann-machine-in-node</id>
    <content type="html"><![CDATA[<p>n42 has restricted boltzmann machine. Restricted boltzmann machine is a kind of
autoencoder in order to extract charasteristics. In this article, I would leave out
the detail of restricted boltzmann machine. I want to introduce how the RBM is written
in node.</p>

<!-- more -->


<p>```js
/<em>
 *  Restricted Boltzmann machine
 *
 *  @module n42
 *  @class  RBM
 *  @author Kai Sasaki
 *  @since 2014/01/28
 *
 </em>/</p>

<p>var Matrix = require(&lsquo;sylvester&rsquo;).Matrix;
var Vector = require(&lsquo;sylvester&rsquo;).Vector;
var utils  = require(&lsquo;./utils.js&rsquo;);
var binomial = require(&lsquo;binomial-sampling&rsquo;);
var generator = require(&lsquo;box-muller&rsquo;);</p>

<p>function RBM(input, nVisible, nHidden, W, hBias, vBias) {</p>

<pre><code>var self = this;

self.input = input;
self.nVisible = nVisible;
self.nHidden  = nHidden;

// Initialize weight parameter
self.W     = (W != undefined)? W : Matrix.Random(nVisible, nHidden);

// Initialize hidden bias parameters
self.hBias = (hBias != undefined)? hBias : Vector.Zero(nHidden);

// Initialize visual bias parameters
self.vBias = (vBias != undefined)? vBias : Vector.Zero(nVisible);
</code></pre>

<p>}</p>

<p>RBM.prototype.contrastiveDivergence = function(lr, k, input) {</p>

<pre><code>var self = this;
self.input = (input != undefined)? input : self.input
var ph = self.sampleHGivenV(self.input);

// Select phSample
var chainStart = ph[1];

// stepRet[0] v1Means
// stepRet[1] v1Samples
// stepRet[2] h1Means
// stepRet[3] h1Sample

for (var step = 0; step &lt; k; step++) {
    var stepRet;
    if (step == 0) {
        stepRet = self.gibbsHvh(chainStart);
    } else {
        // Select a nhSample
        stepRet = self.gibbsHvh(stepRet[3]);
    }
}

// W += lr * (W.T * phSample - nvSample.T * nhMeans)
var witem1 = self.input.transpose().x(ph[1]).x(lr);
var witem2 = stepRet[1].transpose().x(stepRet[2]).x(lr)
self.W = self.W.add(witem1.subtract(witem2));

var vitem1 = self.input.x(lr);
var vitem2 = stepRet[1].x(lr);
self.vBias = self.vBias.add(utils.mean(vitem1.subtract(vitem2), 0));

var hitem1 = ph[1].x(lr);
var hitem2 = stepRet[2].x(lr);
self.hBias = self.hBias.add(utils.mean(hitem1.subtract(hitem2), 0));
</code></pre>

<p>}</p>

<p>RBM.prototype.sampleHGivenV = function(v0Sample) {</p>

<pre><code>var self = this;
var h1Means = self.propup(v0Sample);
var h1Sample = [];
for (var i = 0; i &lt; h1Means.rows(); i++) {
    h1Sample.push([]);
    for (var j = 0; j &lt; h1Means.cols(); j++) {
        h1Sample[i].push(binomial(1, h1Means.e(i+1, j+1)));
        //h1Sample[i].push(generator() + h1Means.e(i+1, j+1));
    }
}
h1Sample = $M(h1Sample);
return [h1Means, h1Sample];
</code></pre>

<p>}</p>

<p>RBM.prototype.sampleVGivenH = function(h0Sample) {</p>

<pre><code>var self = this;
var v1Means = self.propdown(h0Sample);
var v1Sample = [];
for (var i = 0; i &lt; v1Means.rows(); i++) {
    v1Sample.push([]);
    for (var j = 0; j &lt; v1Means.cols(); j++) {
        v1Sample[i].push(binomial(1, v1Means.e(i+1, j+1)));
        //v1Sample[i].push(generator()*0.01 + v1Means.e(i+1, j+1))
    }
}
v1Sample = $M(v1Sample);
return [v1Means, v1Sample];
</code></pre>

<p>}</p>

<p>RBM.prototype.gibbsHvh = function(h0Sample) {</p>

<pre><code>var self = this;
var retV1 = self.sampleVGivenH(h0Sample);
// Given h1Sample == retV1[1]
var retH1 = self.sampleHGivenV(retV1[1]);
return [retV1[0], retV1[1], retH1[0], retH1[1]];
</code></pre>

<p>}</p>

<p>RBM.prototype.propup = function(v) {</p>

<pre><code>var self = this;
var preSigmoidActivation = utils.plusBias(v.x(self.W), self.hBias);
return utils.sigmoid(preSigmoidActivation);
</code></pre>

<p>}</p>

<p>RBM.prototype.propdown = function(h) {</p>

<pre><code>var self = this;
var preSigmoidActivation = utils.plusBias(h.x(self.W.transpose()), self.vBias);
return utils.sigmoid(preSigmoidActivation);
</code></pre>

<p>}</p>

<p>RBM.prototype.reconstruct = function(v) {</p>

<pre><code>var self = this;
var h = utils.sigmoid(utils.plusBias(v.x(self.W), self.hBias));
var reconstructedV = utils.sigmoid(utils.plusBias(h.x(self.W.transpose()), self.vBias));
return reconstructedV;
</code></pre>

<p>}</p>

<p>module.exports = RBM;
```</p>

<p>Though I completed to write, this autoencoder has not yet enough accuracy to prediction in compared to
denoised autoencoder. So I have to pile up some improvements to use practically.
If you find any bugs, welcome patches!!</p>
]]></content>
  </entry>
  
</feed>
