<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Java | The first cry of Atom]]></title>
  <link href="http://Lewuathe.github.io/blog/categories/java/atom.xml" rel="self"/>
  <link href="http://Lewuathe.github.io/"/>
  <updated>2014-02-21T22:14:20+09:00</updated>
  <id>http://Lewuathe.github.io/</id>
  <author>
    <name><![CDATA[Kai Sasaki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Useful Shortcuts for IntelliJ IDEA]]></title>
    <link href="http://Lewuathe.github.io/blog/2014/02/18/useful-shortcuts-for-intellij-idea/"/>
    <updated>2014-02-18T21:21:10+09:00</updated>
    <id>http://Lewuathe.github.io/blog/2014/02/18/useful-shortcuts-for-intellij-idea</id>
    <content type="html"><![CDATA[<p>In this week, I am attending a lecture for developing mobile application on android.
Of course I had no experience writing android applications, I have not written Java code in my life.
Through this lecture, I was so impressed by the functionality of <a href="https://www.eclipse.org/">Eclipse</a>.</p>

<p>In my life, I hate using IDE because these tools always hide a mechanism for building application.
This is why I always used emacs or vim. But today, I changed my mind. IDE is the next step for me in order to acquire new skills.
So just now I installed <a href="http://www.jetbrains.com/idea/">IntelliJ IDEA</a> which is in fashion nowadays.</p>

<!-- more -->


<p>In this post, I&rsquo;d like to introduce some shortcuts for my kickstarting IntelliJ IDEA. If you know any other tips, please let me know.</p>

<table>
<thead>
<tr>
<th></th>
<th align="left"> Short Cut </th>
<th align="left"> Function </th>
<th align="left"> Notes </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td align="left"> Ctrl + Space  </td>
<td align="left"> Basic Code completion </td>
<td align="left"> With IntelliJ IDEA, however code completion is run automatically </td>
</tr>
<tr>
<td></td>
<td align="left"> Alt + Enter   </td>
<td align="left"> Show intention actions and quick-fixes </td>
<td align="left"> IntelliJ IDEA gives me any suggestions in each situations </td>
</tr>
<tr>
<td></td>
<td align="left"> Ctrl + Alt + L </td>
<td align="left"> Reformat code </td>
<td align="left"> Rearrange for readable format </td>
</tr>
<tr>
<td></td>
<td align="left"> Ctrl + Alt + O </td>
<td align="left"> Optimize imports </td>
<td align="left"> Remove unnecessary imports </td>
</tr>
<tr>
<td></td>
<td align="left"> Ctrl + Q </td>
<td align="left"> Quick documentation </td>
<td align="left"> Simple reference to javadoc </td>
</tr>
<tr>
<td></td>
<td align="left"> Ctrl + O </td>
<td align="left"> Override methods </td>
<td align="left"> Implements override methods of current class </td>
</tr>
<tr>
<td></td>
<td align="left"> Ctrl + / </td>
<td align="left"> Comment out/in a line </td>
<td></td>
</tr>
<tr>
<td></td>
<td align="left"> Ctrl + W </td>
<td align="left"> Select successively increasing code blocks </td>
<td align="left"> You can select a meaningful code blocks </td>
</tr>
<tr>
<td></td>
<td align="left"> Ctrl + Y </td>
<td align="left"> Delete line at caret </td>
<td></td>
</tr>
<tr>
<td></td>
<td align="left"> Shift + Enter </td>
<td align="left"> Start new line </td>
<td align="left"> Wherever line you are, insert new line</td>
</tr>
<tr>
<td></td>
<td align="left"> Shift + F10 </td>
<td align="left"> Run </td>
<td align="left"> </td>
</tr>
<tr>
<td></td>
<td align="left"> Ctrl + Alt + V </td>
<td align="left"> Introduce variables </td>
<td align="left"> Make variables name automatically </td>
</tr>
<tr>
<td></td>
<td align="left"> Ctrl + J </td>
<td align="left"> Insert live templates </td>
<td align="left"> A lot of type of templates are preinstalled </td>
</tr>
</tbody>
</table>


<p>How do you think that? Of course, there are so many shortcuts and functions that I cannot introduce all of these.
The only way to know how useful IntelliJ IDEA is using it throughly! From today, I&rsquo;ll switch default editor to IntelliJ IDEA.</p>

<p>Thank you.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My First Jenkins Plugin]]></title>
    <link href="http://Lewuathe.github.io/blog/2013/11/28/my-first-jenkins-plugin/"/>
    <updated>2013-11-28T21:15:00+09:00</updated>
    <id>http://Lewuathe.github.io/blog/2013/11/28/my-first-jenkins-plugin</id>
    <content type="html"><![CDATA[<p>Released my first Jenkins plugin</p>

<p><a href="https://github.com/jenkinsci/hckrnews-plugin">https://github.com/jenkinsci/hckrnews-plugin</a></p>

<p><img src="/images/posts/2013-11-28-hckrnews-plugin/screen-shot.png" alt="Screen shot" /></p>

<p>With this plugin, you can read hacker news top time line sitting in front of CI server.
So you can read top topics about technology and so on at the same time building your project. Does it sound good?</p>

<h2>How to publish Jenkins plugin?</h2>

<h3>Make GitHub repository</h3>

<p>Normal Maven project needs only src/ and pom.xml. Jenkins plugin project is not exception.
Write right .gitignore, and ignore target/ and work/ directory. These are not necessary.</p>

<h3>Create new jenkins-ci account</h3>

<p>Visit <a href="https://jenkins-ci.org/account/">here</a>. Create your new account.</p>

<h3>Write settings.xml your account information</h3>

<p>Your account name, and password got from above process should be written in <code>~/.m2/settings.xml</code> like below.</p>

<p>```
<settings>
 ・・・
  <servers></p>

<pre><code>&lt;server&gt;
  &lt;id&gt;maven.jenkins-ci.org&lt;/id&gt;
  &lt;username&gt;XXXXXX&lt;/username&gt;
  &lt;password&gt;XXXXXX&lt;/password&gt;
&lt;/server&gt;
</code></pre>

<p>  </servers>
  ・・・
</settings>
```</p>

<h3>Application for forking repository</h3>

<p>Send an email to community <a href="https://groups.google.com/forum/#!forum/jenkinsci-ja">mailing list</a> in Japan. If you want to send other community, search <a href="http://jenkins-ci.org/content/mailing-lists">here</a>
Soon your repository is forked to original jenkinsci organization.</p>

<h3>Modify pom.xml</h3>

<p>Add some line. SCM repository url should be written in your project <code>pom.xml</code></p>

<p>```
<scm></p>

<pre><code>&lt;connection&gt;scm:git:ssh://github.com/jenkinsci/XXXXXXXX.git&lt;/connection&gt;
&lt;developerConnection&gt;scm:git:ssh://git@github.com/jenkinsci/XXXXXXXX.git&lt;/developerConnection&gt;
&lt;url&gt;https://github.com/jenkinsci/XXXXXXXX.git&lt;/url&gt;
</code></pre>

<p></scm>
```</p>

<h3>Release!</h3>

<p>Type below command.</p>

<p><code>
$ mvn release:prepare release:perform
</code></p>

<p>One this your should pay attention to is not to add <code>-Dusername</code> and <code>-Dpassword</code> options. These are not used for GitHub but jenkinsci.org
Congratulations!!</p>

<h3>Future</h3>

<p>In fact, I make this plugin with no experience of writing Java, of course maven.
Therefore I have to study these tool and Java grammar. In addition to this, I learned how to write some design patterns with coding in accordance with OO programming.</p>

<p>I also wrote some test codes with JUnit in maven. TDD is the method with which I want to develop. In this time, first I wrote unit test code and second logic code. This is fun for me because my code&rsquo;s quality seems to be kept easily. I want to keep writing test code first. This is the best practice for my developing.</p>

<p>This plugin has only simple functions, however, this experience is sufficient value as software engineer.
In the future, I will seize the moment and make more my own plugins.</p>

<p>Ultimately, please use this plugin. It brings to you a new continuous integration life.</p>

<p>Thank you.</p>
]]></content>
  </entry>
  
</feed>
